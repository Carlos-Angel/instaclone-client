{"version":3,"sources":["utils/constants.js","utils/token.js","config/apollo.js","gql/user.js","components/Auth/RegisterForm/RegisterForm.js","context/AuthContext.js","hooks/useAuth.js","components/Auth/LoginForm/LoginForm.js","assets/png/instaclone.png","pages/Auth/Auth.js","components/User/AvatarForm/AvatarForm.js","components/UserNotFound/UserNotFound.js","components/Modal/ModalBasic/ModalBasic.js","assets/png/avatar.png","gql/follow.js","components/User/Profile/HeaderProfile/HeaderProfile.js","components/User/PasswordForm/PasswordForm.js","components/User/EmailForm/EmailForm.js","components/User/DescriptionForm/DescriptionForm.js","components/User/WebsiteForm/WebsiteForm.js","components/User/SettingsForm/SettingsForm.js","components/User/ListUsers/ListUser.js","components/User/Profile/Followers/Followers.js","components/User/Profile/Profile.js","gql/comment.js","components/Modal/ModalPublication/Comments/Comments.js","components/Modal/ModalPublication/CommentForm/CommentForm.js","gql/like.js","components/Modal/ModalPublication/Actions/Actions.js","components/Modal/ModalPublication/ModalPublication.js","components/Publications/PreviewPublication/PreviewPublication.js","components/Publications/Publications.js","gql/publication.js","components/Home/Feed/Feed.js","components/Home/UsersNotFolloweds/UsersNotFolloweds.js","components/Modal/ModalUpload/ModalUpload.js","components/Header/RightHeader/RightHeader.js","components/Header/Search/Search.js","components/Header/Header.js","layouts/LayoutBasic.js","routes/routes.js","pages/Home/Home.js","pages/User.js","pages/Error/Error404.js","routes/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["TOKEN","setToken","token","localStorage","setItem","getToken","getItem","decodeToken","jwtDecode","httpLink","createUploadLink","uri","authLink","setContext","_","headers","Authorization","client","ApolloClient","connectToDevTools","cache","InMemoryCache","link","concat","REGISTER","gql","LOGIN","GET_USER","UPDATE_AVATAR","DELETE_AVATAR","UPDATE_USER","SEARCH","RegisterForm","setShowLogin","useMutation","register","formik","useFormik","initialValues","name","email","username","password","repeatPassword","validationSchema","Yup","required","matches","oneOf","onSubmit","formData","a","newUser","variables","input","toast","success","error","message","className","Form","handleSubmit","Input","type","placeholder","value","values","onChange","handleChange","errors","Button","AuthContext","createContext","user","undefined","useContext","LoginForm","useState","setError","login","setUser","useAuth","data","Auth","showLogin","Container","fluid","Image","src","instaclone","onClick","AvatarForm","setShowModal","auth","loading","setLoading","update","updateAvatar","getUser","readQuery","query","writeQuery","avatar","urlAvatar","deleteAvatar","onDrop","useCallback","acceptedFile","file","status","warning","useDropzone","accept","noKeyboard","multiple","getRootProps","getInputProps","onDeleteAvatar","UserNotFound","to","ModalBasic","show","setShow","title","children","Modal","size","open","onClose","Header","IS_FOLLOW","FOLLOW","UN_FOLLOW","GET_FOLLOWERS","GET_FOLLOWEDS","GET_NOT_FOLLOWEDS","HeaderProfile","handleModal","follow","unFollow","useQuery","refetch","onFollow","onUnFollow","isFollow","PasswordForm","onLogout","updateUser","currentPassword","newPassword","repeatNewPassword","formValue","EmailForm","currentEmail","DescriptionForm","description","dataForm","TextArea","WebsiteForm","siteWeb","url","SettingsForm","setTitleModal","setChildrenModal","logout","useAth","history","useHistory","useApolloClient","clearStore","push","ListUser","users","map","index","avatarNotFound","Follow","totalPublications","showModal","titleModal","childrenModal","dataFollowers","loadingFollowers","startPollingFollowers","startPolling","stopPollingFollowers","stopPolling","dataFolloweds","loadingFolloweds","startPollingFolloweds","stopPollingFolloweds","useEffect","getFollowers","getFolloweds","Profile","userAuth","typeModal","Grid","Column","width","ImageNotFound","href","target","ADD_COMMENT","GET_COMMENTS","Comments","publication","idPublication","id","getComments","comment","idUser","ImageNoFound","CommentForm","addComment","handleReset","ADD_LIKE","DELETE_LIKE","IS_LIKE","COUNT_LIKES","Actions","loadingAction","setLoadingAction","addLike","deleteLike","dataCount","loadingCount","refetchCount","onAddLike","onDeleteLike","isLike","countLikes","Icon","ModalPublication","style","backgroundImage","PreviewPublication","Publications","getPublications","columns","PUBLISH","GET_PUBLICATIONS","GET_PUBLICATIONS_FOLLOWEDS","Feed","publicationSelect","setPublicationSelect","getPublicationsFolloweds","openPublication","UsersNotFolloweds","getNotFolloweds","ModalUpload","fileUpload","setFileUpload","isLoading","setIsLoading","publish","preview","URL","createObjectURL","onPublish","border","Dimmer","active","Loader","RightHeader","Search","search","setSearch","results","setResults","forEach","key","icon","iconPosition","onSearchChange","e","onResultSelect","resultRenderer","ResultsSearch","GridColumn","Logo","alt","LayoutBasic","routes","path","layout","component","exact","useParams","Navigation","route","render","props","App","setAuth","removeItem","authData","useMemo","Provider","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f1816326.chunk.js","sourcesContent":["export const TOKEN = \"token\";\n","import { TOKEN } from \"./constants\";\nimport jwtDecode from \"jwt-decode\";\n\nexport function setToken(token) {\n  localStorage.setItem(TOKEN, token);\n}\n\nexport function getToken() {\n  return localStorage.getItem(TOKEN);\n}\n\nexport function decodeToken(token) {\n  return jwtDecode(token);\n}\n\nexport function removeToken() {\n  localStorage.removeItem(TOKEN);\n}\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { createUploadLink } from \"apollo-upload-client\";\nimport { setContext } from \"apollo-link-context\";\nimport { getToken } from \"../utils/token\";\n\nconst httpLink = createUploadLink({\n  uri: \"https://carlos-instaclone-server.herokuapp.com/\"\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = getToken();\n\n  return {\n    headers: {\n      ...headers,\n      Authorization: token ? `Bearer ${token}` : \"\"\n    }\n  };\n});\n\nconst client = new ApolloClient({\n  connectToDevTools: true,\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink)\n});\n\nexport default client;\n","import { gql } from \"@apollo/client\";\n\nexport const REGISTER = gql`\n  mutation register($input: UserInput) {\n    register(input: $input) {\n      id\n      name\n      email\n      createdAt\n    }\n  }\n`;\n\nexport const LOGIN = gql`\n  mutation login($input: LoginInput) {\n    login(input: $input) {\n      token\n    }\n  }\n`;\n\nexport const GET_USER = gql`\n  query getUser($id: ID, $username: String) {\n    getUser(id: $id, username: $username) {\n      id\n      name\n      username\n      email\n      siteWeb\n      description\n      avatar\n    }\n  }\n`;\n\nexport const UPDATE_AVATAR = gql`\n  mutation updateAvatar($file: Upload) {\n    updateAvatar(file: $file) {\n      status\n      urlAvatar\n    }\n  }\n`;\n\nexport const DELETE_AVATAR = gql`\n  mutation deleteAvatar {\n    deleteAvatar\n  }\n`;\n\nexport const UPDATE_USER = gql`\n  mutation updateUser($input: UserUpdateInput) {\n    updateUser(input: $input)\n  }\n`;\n\nexport const SEARCH = gql`\n  query search($search: String) {\n    search(search: $search) {\n      name\n      username\n      avatar\n    }\n  }\n`;\n","import React from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { useMutation } from \"@apollo/client\";\nimport { REGISTER } from \"../../../gql/user\";\nimport \"./RegisterForm.scss\";\n\nexport default function RegisterForm({ setShowLogin }) {\n  const [register] = useMutation(REGISTER);\n\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object({\n      name: Yup.string().required(\"Tu nombre es obligatorio\"),\n      email: Yup.string()\n        .email(\"El email no es valido\")\n        .required(\"El email es obligatorio\"),\n      username: Yup.string()\n        .matches(\n          /^[a-zA-Z0-9-]*$/,\n          \"El nombre del usuario no debe tener espacios\"\n        )\n        .required(\"El nombre del usuario es obligatorio\"),\n      password: Yup.string().required(\"La contraseña es obligatoria\"),\n      repeatPassword: Yup.string()\n        .required(\"La contraseña es obligatoria\")\n        .oneOf([Yup.ref(\"password\")], \"Las contraseñas no coinciden entre si\")\n    }),\n    onSubmit: async formData => {\n      try {\n        const newUser = formData;\n        delete newUser.repeatPassword;\n\n        await register({\n          variables: {\n            input: newUser\n          }\n        });\n\n        toast.success(\"USuario registrado correctamente\");\n        setShowLogin(true);\n      } catch (error) {\n        toast.error(error.message);\n      }\n    }\n  });\n\n  return (\n    <>\n      <h2 className=\"register-form-title\">\n        Regístrate para ver fotos y videos de tus amigos\n      </h2>\n\n      <Form className=\"register-form\" onSubmit={formik.handleSubmit}>\n        <Form.Input\n          type=\"text\"\n          placeholder=\"Nombre y apellidos\"\n          name=\"name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.errors.name && true}\n        />\n        <Form.Input\n          type=\"text\"\n          placeholder=\"Correo electrónico\"\n          name=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.errors.email && true}\n        />\n        <Form.Input\n          type=\"text\"\n          placeholder=\"Nombre de usuario\"\n          name=\"username\"\n          value={formik.values.username}\n          onChange={formik.handleChange}\n          error={formik.errors.username && true}\n        />\n        <Form.Input\n          type=\"password\"\n          placeholder=\"Contraseña\"\n          name=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.errors.password && true}\n        />\n        <Form.Input\n          type=\"password\"\n          placeholder=\"Confirmar contraseña\"\n          name=\"repeatPassword\"\n          value={formik.values.repeatPassword}\n          onChange={formik.handleChange}\n          error={formik.errors.repeatPassword && true}\n        />\n\n        <Button type=\"submit\" className=\"btn-submit\">\n          Registrate\n        </Button>\n      </Form>\n    </>\n  );\n}\n\nfunction initialValues() {\n  return {\n    name: \"\",\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    repeatPassword: \"\"\n  };\n}\n","import { createContext } from \"react\";\n\nconst AuthContext = createContext({\n  user: undefined,\n});\n\nexport default AuthContext;\n","import { useContext } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\n\nexport default () => useContext(AuthContext);\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN } from \"../../../gql/user\";\nimport { setToken, decodeToken } from \"../../../utils/token\";\nimport useAuth from \"../../../hooks/useAuth\";\nimport \"./LoginForm.scss\";\n\nexport default function LoginForm() {\n  const [error, setError] = useState(\"\");\n  const [login] = useMutation(LOGIN);\n\n  const { setUser } = useAuth();\n\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email(\"El correo electrónico no es valido\")\n        .required(\"El correo electrónico es obligatorio\"),\n      password: Yup.string().required(\"La contraseña es obligatorio\"),\n    }),\n    onSubmit: async (formData) => {\n      setError(\"\");\n      try {\n        const { data } = await login({\n          variables: {\n            input: formData,\n          },\n        });\n\n        const { token } = data.login;\n        setToken(token);\n        setUser(decodeToken(token));\n      } catch (error) {\n        setError(error.message);\n      }\n    },\n  });\n\n  return (\n    <>\n      <h2>Entra para ver fotos y videos de tus amigos</h2>\n      <Form className=\"login-form\" onSubmit={formik.handleSubmit}>\n        <Form.Input\n          type=\"text\"\n          placeholder=\"correo electrónico\"\n          name=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.errors.email && true}\n        />\n        <Form.Input\n          type=\"password\"\n          placeholder=\"Contraseña\"\n          name=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.errors.password && true}\n        />\n        <Button type=\"submit\" className=\"btn-submit\">\n          Iniciar sessión\n        </Button>\n        {error && <p className=\"submit-error\"> {error} </p>}\n      </Form>\n    </>\n  );\n}\n\nfunction initialValues() {\n  return {\n    email: \"\",\n    password: \"\",\n  };\n}\n","export default __webpack_public_path__ + \"static/media/instaclone.6489b803.png\";","import React, { useState } from \"react\";\nimport { Container, Image } from \"semantic-ui-react\";\nimport { RegisterForm, LoginForm } from \"../../components/Auth\";\nimport instaclone from \"../../assets/png/instaclone.png\";\nimport \"./Auth.scss\";\n\nexport default function Auth() {\n  const [showLogin, setShowLogin] = useState(true);\n\n  return (\n    <Container fluid className=\"auth\">\n      <Image src={instaclone} />\n      <div className=\"container-form\">\n        {showLogin ? (\n          <LoginForm />\n        ) : (\n          <RegisterForm setShowLogin={setShowLogin} />\n        )}\n      </div>\n\n      <div className=\"change-form\">\n        <p>\n          {showLogin ? (\n            <>\n              ¿No tienes una cuenta?\n              <span onClick={() => setShowLogin(!showLogin)}>Regístrate</span>\n            </>\n          ) : (\n            <>\n              ¡Entra con tu cuenta!\n              <span onClick={() => setShowLogin(!showLogin)}>\n                Iniciar sesión\n              </span>\n            </>\n          )}\n        </p>\n      </div>\n    </Container>\n  );\n}\n","import React, { useCallback, useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { UPDATE_AVATAR, GET_USER, DELETE_AVATAR } from \"../../../gql/user\";\nimport { Button } from \"semantic-ui-react\";\nimport { toast } from \"react-toastify\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"./AvatarForm.scss\";\n\nexport default function AvatarForm({ setShowModal, auth }) {\n  const [loading, setLoading] = useState(false);\n  const [updateAvatar] = useMutation(UPDATE_AVATAR, {\n    update(cache, { data: { updateAvatar } }) {\n      // obtener cache\n      const { getUser } = cache.readQuery({\n        query: GET_USER,\n        variables: {\n          username: auth.username\n        }\n      });\n      // reescribir cache\n      cache.writeQuery({\n        query: GET_USER,\n        variables: {\n          username: auth.username\n        },\n        data: {\n          getUser: {\n            ...getUser,\n            avatar: updateAvatar.urlAvatar\n          }\n        }\n      });\n    }\n  });\n\n  const [deleteAvatar] = useMutation(DELETE_AVATAR, {\n    update(cache) {\n      const { getUser } = cache.readQuery({\n        query: GET_USER,\n        variables: {\n          username: auth.username\n        }\n      });\n\n      cache.writeQuery({\n        query: GET_USER,\n        variables: { username: auth.username },\n        data: {\n          getUser: {\n            ...getUser,\n            avatar: \"\"\n          }\n        }\n      });\n    }\n  });\n\n  const onDrop = useCallback(async acceptedFile => {\n    const file = acceptedFile[0];\n    try {\n      setLoading(true);\n      const { data } = await updateAvatar({ variables: { file } });\n      if (!data.updateAvatar.status) {\n        toast.warning(\"Error al actualizar el avatar\");\n      } else {\n        setShowModal(false);\n      }\n      setLoading(false);\n    } catch (error) {\n      toast.warning(\"Error al actualizar el avatar\");\n    }\n  }, []);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \"image/jpeg, image/jpg, image/png\",\n    noKeyboard: true,\n    multiple: false,\n    onDrop\n  });\n\n  const onDeleteAvatar = async () => {\n    try {\n      const { data } = await deleteAvatar();\n      if (!data.deleteAvatar) {\n        toast.warning(\"error al borrar el avatar\");\n      } else {\n        setShowModal(false);\n      }\n    } catch (error) {\n      toast.warning(\"error al borrar el avatar\");\n    }\n  };\n\n  return (\n    <div className=\"avatar-form\">\n      <Button {...getRootProps()} loading={loading}>\n        Subir Foto de perfil\n      </Button>\n      <Button onClick={onDeleteAvatar}>Eliminar Foto perfil</Button>\n      <Button onClick={() => setShowModal(false)}>Cancelar</Button>\n      <input {...getInputProps()} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./UserNotFound.scss\";\n\nexport default function UserNotFound() {\n  return (\n    <div className=\"user-not-found\">\n      <p>Usuario no encontrado</p>\n      <p>\n        Es posible que el enlace que has seguido sea incorrecto o el usuario se\n        haya eliminado\n      </p>\n      <Link to=\"/\">Volver al Home</Link>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Modal } from \"semantic-ui-react\";\nimport \"./ModalBasic.scss\";\n\nexport default function ModalBasic({ show, setShow, title, children }) {\n  const onClose = () => setShow(false);\n\n  return (\n    <Modal size=\"mini\" open={show} onClose={onClose} className=\"modal-basic\">\n      {title && <Modal.Header>{title}</Modal.Header>}\n      {children}\n    </Modal>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/avatar.235f193d.png\";","import { gql } from \"@apollo/client\";\n\nexport const IS_FOLLOW = gql`\n  query isFollow($username: String!) {\n    isFollow(username: $username)\n  }\n`;\n\nexport const FOLLOW = gql`\n  mutation follow($username: String!) {\n    follow(username: $username)\n  }\n`;\n\nexport const UN_FOLLOW = gql`\n  mutation unFollow($username: String!) {\n    unFollow(username: $username)\n  }\n`;\n\nexport const GET_FOLLOWERS = gql`\n  query getFollowers($username: String!) {\n    getFollowers(username: $username) {\n      username\n      name\n      avatar\n    }\n  }\n`;\n\nexport const GET_FOLLOWEDS = gql`\n  query getFolloweds($username: String!) {\n    getFolloweds(username: $username) {\n      username\n      name\n      avatar\n    }\n  }\n`;\n\nexport const GET_NOT_FOLLOWEDS = gql`\n  query getNotFolloweds {\n    getNotFolloweds {\n      username\n      name\n      avatar\n    }\n  }\n`;\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { IS_FOLLOW, FOLLOW, UN_FOLLOW } from \"../../../../gql/follow\";\nimport { toast } from \"react-toastify\";\nimport \"./HeaderProfile.scss\";\n\nexport default function HeaderProfile({ username, auth, handleModal }) {\n  const [follow] = useMutation(FOLLOW);\n  const [unFollow] = useMutation(UN_FOLLOW);\n\n  const { data, loading, refetch } = useQuery(IS_FOLLOW, {\n    variables: {\n      username\n    }\n  });\n\n  const buttonFollow = () => {\n    if (data.isFollow) {\n      return (\n        <Button className=\"btn-danger\" onClick={onUnFollow}>\n          Dejar de seguir\n        </Button>\n      );\n    } else {\n      return (\n        <Button className=\"btn-action\" onClick={onFollow}>\n          Seguir\n        </Button>\n      );\n    }\n  };\n\n  const onFollow = async () => {\n    try {\n      await follow({\n        variables: {\n          username\n        }\n      });\n      refetch();\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n\n  const onUnFollow = async () => {\n    try {\n      await unFollow({\n        variables: {\n          username\n        }\n      });\n      refetch();\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n\n  return (\n    <div className=\"header-profile\">\n      <h2>{username}</h2>\n      {username === auth.username ? (\n        <Button\n          onClick={() => {\n            handleModal(\"settings\");\n          }}\n        >\n          Ajustes\n        </Button>\n      ) : (\n        !loading && buttonFollow()\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { UPDATE_USER } from \"../../../gql/user\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { toast } from \"react-toastify\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./PasswordForm.scss\";\n\nexport default function PasswordForm({ onLogout }) {\n  const [updateUser] = useMutation(UPDATE_USER);\n  const [error, setError] = useState(\"\");\n\n  const formik = useFormik({\n    initialValues: initialValues(),\n    validationSchema: Yup.object({\n      currentPassword: Yup.string().required(),\n      newPassword: Yup.string().required(),\n      repeatNewPassword: Yup.string()\n        .required()\n        .oneOf(\n          [Yup.ref(\"newPassword\")],\n          \"Las contraseñas no coinciden entre si\"\n        ),\n    }),\n    onSubmit: async (formValue) => {\n      setError(\"\");\n      try {\n        const result = await updateUser({\n          variables: {\n            input: {\n              currentPassword: formValue.currentPassword,\n              newPassword: formValue.newPassword,\n            },\n          },\n        });\n\n        if (result.data.updateUser) {\n          toast.success(\"Contraseña actualizada. Inicie sessión nuevamente.\");\n          onLogout();\n        } else {\n          setError(\"La contraseña no es correcta\");\n        }\n      } catch (error) {\n        toast.error(\"Error al cambiar la contraseña\");\n      }\n    },\n  });\n\n  return (\n    <Form className=\"password-form\" onSubmit={formik.handleSubmit}>\n      <Form.Input\n        placeholder=\"Contraseña actual\"\n        type=\"password\"\n        name=\"currentPassword\"\n        value={formik.values.currentPassword}\n        onChange={formik.handleChange}\n        error={formik.errors.currentPassword && true}\n      />\n      {error && <p className=\"submit-error\"> {error} </p>}\n      <Form.Input\n        placeholder=\"Nueva contraseña\"\n        type=\"password\"\n        name=\"newPassword\"\n        value={formik.values.newPassword}\n        onChange={formik.handleChange}\n        error={formik.errors.newPassword && true}\n      />\n      <Form.Input\n        placeholder=\"Repetir nueva contraseña\"\n        type=\"password\"\n        name=\"repeatNewPassword\"\n        value={formik.values.repeatNewPassword}\n        onChange={formik.handleChange}\n        error={formik.errors.repeatNewPassword && true}\n      />\n      <Button type=\"submit\" className=\"btn-submit\">\n        Actualizar\n      </Button>\n    </Form>\n  );\n}\n\nfunction initialValues() {\n  return {\n    currentPassword: \"\",\n    newPassword: \"\",\n    repeatNewPassword: \"\",\n  };\n}\n","import React from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { UPDATE_USER } from \"../../../gql/user\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport * as Yup from \"yup\";\nimport \"./EmailForm.scss\";\n\nexport default function EmailForm({ setShowModal, currentEmail, refetch }) {\n  const [updateUser] = useMutation(UPDATE_USER);\n\n  const formik = useFormik({\n    initialValues: { email: currentEmail || \"\" },\n    validationSchema: Yup.object({\n      email: Yup.string().email().required(),\n    }),\n    onSubmit: async (formData) => {\n      try {\n        const { data } = await updateUser({\n          variables: {\n            input: formData,\n          },\n        });\n        if (!data.updateUser) {\n          toast.error(\"Error al actualizar email\");\n        } else {\n          toast.success(\"Email actualizado\");\n          refetch();\n          setShowModal(false);\n        }\n      } catch (error) {\n        toast.error(\"Error al actualizar email\");\n      }\n    },\n  });\n\n  return (\n    <Form className=\"email-form\" onSubmit={formik.handleSubmit}>\n      <Form.Input\n        placeholder=\"Nuevo email\"\n        name=\"email\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        error={formik.errors.email && true}\n      />\n      <Button type=\"submit\" className=\"btn-submit\">\n        Actualizar\n      </Button>\n    </Form>\n  );\n}\n","import React from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { UPDATE_USER } from \"../../../gql/user\";\nimport { Form, TextArea, Button } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport * as Yup from \"yup\";\nimport \"./DescriptionForm.scss\";\nimport { update } from \"lodash\";\n\nexport default function DescriptionForm({\n  setShowModal,\n  description,\n  refetch,\n}) {\n  const [updateUser] = useMutation(UPDATE_USER);\n\n  const formik = useFormik({\n    initialValues: { description: description || \"\" },\n    validationSchema: Yup.object({\n      description: Yup.string().required(),\n    }),\n    onSubmit: async (dataForm) => {\n      try {\n        const { data } = await updateUser({\n          variables: {\n            input: dataForm,\n          },\n        });\n        if (!data.updateUser) {\n          toast.error(\"Error al actualizar descripción\");\n        } else {\n          toast.success(\"Descripción actualizada\");\n          refetch();\n          setShowModal(false);\n        }\n      } catch (error) {\n        toast.error(\"Error al actualizar descripción\");\n      }\n    },\n  });\n\n  return (\n    <Form className=\"description-form\" onSubmit={formik.handleSubmit}>\n      <TextArea\n        name=\"description\"\n        value={formik.values.description}\n        onChange={formik.handleChange}\n        className={formik.errors.description && \"error\"}\n      />\n      <Button type=\"submit\" className=\"btn-submit\">\n        Actualizar\n      </Button>\n    </Form>\n  );\n}\n","import React from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { UPDATE_USER } from \"../../../gql/user\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { toast } from \"react-toastify\";\nimport \"./WebsiteForm.scss\";\n\nexport default function WebsiteForm({ setShowModal, siteWeb, refetch }) {\n  const [updateUser] = useMutation(UPDATE_USER);\n\n  const formik = useFormik({\n    initialValues: { siteWeb: siteWeb || \"\" },\n    validationSchema: Yup.object({\n      siteWeb: Yup.string().url().required(),\n    }),\n    onSubmit: async (dataForm) => {\n      try {\n        const { data } = await updateUser({\n          variables: {\n            input: dataForm,\n          },\n        });\n\n        if (!data.updateUser) {\n          toast.error(\"Error al actualizar\");\n        } else {\n          toast.success(\"website actualizado\");\n          refetch();\n          setShowModal(false);\n        }\n      } catch (error) {\n        toast.error(\"Error al actualizar\");\n      }\n    },\n  });\n\n  return (\n    <Form className=\"website-form\" onSubmit={formik.handleSubmit}>\n      <Form.Input\n        type=\"url\"\n        placeholder=\"website\"\n        name=\"siteWeb\"\n        value={formik.values.siteWeb}\n        onChange={formik.handleChange}\n        error={formik.errors.siteWeb && true}\n      />\n      <Button type=\"submit\" className=\"btn-submit\">\n        Actualizar\n      </Button>\n    </Form>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport useAth from \"../../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\nimport { useApolloClient } from \"@apollo/client\";\nimport PasswordForm from \"../PasswordForm\";\nimport EmailForm from \"../EmailForm\";\nimport DescriptionForm from \"../DescriptionForm\";\nimport WebsiteForm from \"../WebsiteForm\";\nimport \"./SettingsForm.scss\";\n\nexport default function SettingsForm({\n  setShowModal,\n  setTitleModal,\n  setChildrenModal,\n  getUser,\n  refetch,\n}) {\n  const { logout } = useAth();\n  const history = useHistory();\n  const client = useApolloClient();\n  const onLogout = () => {\n    client.clearStore();\n    logout();\n    history.push(\"/\");\n  };\n\n  const onChangePassword = () => {\n    setTitleModal(\"cambiar contraseña\");\n    setChildrenModal(<PasswordForm onLogout={onLogout} />);\n  };\n\n  const onChangeEmail = () => {\n    setTitleModal(\"cambiar email\");\n    setChildrenModal(\n      <EmailForm\n        setShowModal={setShowModal}\n        currentEmail={getUser.email}\n        refetch={refetch}\n      />\n    );\n  };\n\n  const onChangeDescription = () => {\n    setTitleModal(\"Actualizar descripción\");\n    setChildrenModal(\n      <DescriptionForm\n        setShowModal={setShowModal}\n        description={getUser.description}\n        refetch={refetch}\n      />\n    );\n  };\n\n  const onChangeWebsite = () => {\n    setTitleModal(\"Actualizar Website\");\n    setChildrenModal(\n      <WebsiteForm\n        setShowModal={setShowModal}\n        siteWeb={getUser.siteWeb}\n        refetch={refetch}\n      />\n    );\n  };\n\n  return (\n    <div className=\"settings-form\">\n      <Button onClick={onChangePassword}>Cambiar contraseña</Button>\n      <Button onClick={onChangeEmail}>Cambiar email</Button>\n      <Button onClick={onChangeDescription}>Descripción</Button>\n      <Button onClick={onChangeWebsite}>Sitio Web</Button>\n      <Button onClick={() => onLogout()}>Cerrar sección</Button>\n      <Button onClick={() => setShowModal(false)}>Cancelar</Button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Image } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { size, map } from \"lodash\";\nimport avatarNotFound from \"../../../assets/png/avatar.png\";\nimport \"./ListUser.scss\";\n\nexport default function ListUser({ users, setShowModal }) {\n  const history = useHistory();\n\n  const goToUser = (username) => {\n    setShowModal(false);\n    history.push(`/${username}`);\n  };\n\n  return (\n    <div className=\"list-users\">\n      {size(users) === 0 ? (\n        <p className=\"list-users__not-users\">No se han encontrado usuarios</p>\n      ) : (\n        map(users, (user, index) => (\n          <div\n            key={index}\n            className=\"list-users__user\"\n            onClick={() => goToUser(user.username)}\n          >\n            <Image src={user.avatar || avatarNotFound} avatar />\n            <div>\n              <p>{user.name}</p>\n              <p>{user.username}</p>\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_FOLLOWERS, GET_FOLLOWEDS } from \"../../../../gql/follow\";\nimport { size } from \"lodash\";\nimport ModalBasic from \"../../../Modal/ModalBasic\";\nimport ListUsers from \"../../ListUsers\";\nimport \"./Followers.scss\";\n\nexport default function Follow({ username, totalPublications }) {\n  const [showModal, setShowModal] = useState(false);\n  const [titleModal, setTitleModal] = useState(\"\");\n  const [childrenModal, setChildrenModal] = useState(null);\n\n  const {\n    data: dataFollowers,\n    loading: loadingFollowers,\n    startPolling: startPollingFollowers,\n    stopPolling: stopPollingFollowers,\n  } = useQuery(GET_FOLLOWERS, {\n    variables: {\n      username,\n    },\n  });\n\n  const {\n    data: dataFolloweds,\n    loading: loadingFolloweds,\n    startPolling: startPollingFolloweds,\n    stopPolling: stopPollingFolloweds,\n  } = useQuery(GET_FOLLOWEDS, {\n    variables: {\n      username,\n    },\n  });\n\n  useEffect(() => {\n    startPollingFollowers(1000);\n    return () => stopPollingFollowers();\n  }, [startPollingFollowers, stopPollingFollowers]);\n\n  useEffect(() => {\n    startPollingFolloweds(1000);\n    return () => stopPollingFolloweds();\n  }, [startPollingFolloweds, stopPollingFolloweds]);\n\n  if (loadingFollowers || loadingFolloweds) {\n    return null;\n  }\n  const { getFollowers } = dataFollowers;\n  const { getFolloweds } = dataFolloweds;\n\n  const openFollowers = () => {\n    setShowModal(true);\n    setTitleModal(\"Seguidores\");\n    setChildrenModal(\n      <ListUsers users={getFollowers} setShowModal={setShowModal} />\n    );\n  };\n\n  const openFolloweds = () => {\n    setShowModal(true);\n    setTitleModal(\"seguidos\");\n    setChildrenModal(\n      <ListUsers users={getFolloweds} setShowModal={setShowModal} />\n    );\n  };\n\n  return (\n    <>\n      <div className=\"followers\">\n        <p>\n          {\" \"}\n          <span>{totalPublications}</span> publicaciones\n        </p>\n        <p className=\"link\" onClick={openFollowers}>\n          {\" \"}\n          <span>{size(getFollowers)}</span> seguidores\n        </p>\n        <p className=\"link\" onClick={openFolloweds}>\n          {\" \"}\n          <span>{size(getFolloweds)}</span> seguidos\n        </p>\n      </div>\n      <ModalBasic\n        show={showModal}\n        setShow={setShowModal}\n        title={titleModal}\n        children={childrenModal}\n      ></ModalBasic>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Grid, Image } from \"semantic-ui-react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_USER } from \"../../../gql/user\";\nimport userAuth from \"../../../hooks/useAuth\";\nimport AvatarForm from \"../AvatarForm\";\nimport UserNotFound from \"../../UserNotFound\";\nimport ModalBasic from \"../../Modal/ModalBasic\";\nimport ImageNotFound from \"../../../assets/png/avatar.png\";\nimport HeaderProfile from \"./HeaderProfile\";\nimport SettingsForm from \"../SettingsForm\";\nimport Followers from \"./Followers\";\nimport \"./Profile.scss\";\n\nexport default function Profile({ username, totalPublications }) {\n  const [showModal, setShowModal] = useState(false);\n  const [titleModal, setTitleModal] = useState(\"\");\n  const [childrenModal, setChildrenModal] = useState(false);\n  const { auth } = userAuth();\n\n  const { data, loading, error, refetch } = useQuery(GET_USER, {\n    variables: {\n      username,\n    },\n  });\n\n  if (loading) return null;\n  if (error) return <UserNotFound />;\n\n  const { getUser } = data;\n\n  const handleModal = (typeModal) => {\n    switch (typeModal) {\n      case \"avatar\":\n        setTitleModal(\"Cambiar foto de perfil\");\n        setChildrenModal(\n          <AvatarForm setShowModal={setShowModal} auth={auth} />\n        );\n        setShowModal(true);\n        break;\n      case \"settings\":\n        setTitleModal(\"Ajustes\");\n        setChildrenModal(\n          <SettingsForm\n            setShowModal={setShowModal}\n            setTitleModal={setTitleModal}\n            setChildrenModal={setChildrenModal}\n            getUser={getUser}\n            refetch={refetch}\n          />\n        );\n        setShowModal(true);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <Grid className=\"profile\">\n        <Grid.Column width={5} className=\"profile__left\">\n          <Image\n            src={getUser.avatar ? getUser.avatar : ImageNotFound}\n            avatar\n            onClick={() => username === auth.username && handleModal(\"avatar\")}\n          />\n        </Grid.Column>\n        <Grid.Column width={11} className=\"profile__right\">\n          <HeaderProfile\n            username={username}\n            auth={auth}\n            handleModal={handleModal}\n          />\n          <Followers\n            username={username}\n            totalPublications={totalPublications}\n          />\n          <div className=\"other\">\n            <p className=\"name\">{getUser.name}</p>\n            {getUser.siteWeb && (\n              <a href={getUser.siteWeb} className=\"siteWeb\" target=\"_blank\">\n                {getUser.siteWeb}\n              </a>\n            )}\n\n            {getUser.description && (\n              <p className=\"description\">{getUser.description}</p>\n            )}\n          </div>\n        </Grid.Column>\n      </Grid>\n      <ModalBasic show={showModal} setShow={setShowModal} title={titleModal}>\n        {childrenModal}\n      </ModalBasic>\n    </>\n  );\n}\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_COMMENT = gql`\n  mutation addComment($input: CommentInput) {\n    addComment(input: $input) {\n      idPublication\n      comment\n    }\n  }\n`;\n\nexport const GET_COMMENTS = gql`\n  query getComments($idPublication: ID!){\n  getComments(idPublication: $idPublication){\n    idPublication\n    idUser{\n      name\n      username\n      avatar\n    }\n    comment\n    createdAt\n  }\n}\n`;","import React, { useEffect } from \"react\";\nimport { map } from \"lodash\";\nimport { Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_COMMENTS } from \"../../../../gql/comment\";\nimport ImageNoFound from \"../../../../assets/png/avatar.png\";\nimport \"./Comments.scss\";\n\nexport default function Comments({ publication }) {\n  const { data, loading, startPolling, stopPolling } = useQuery(GET_COMMENTS, {\n    variables: {\n      idPublication: publication.id\n    }\n  });\n\n  useEffect(() => {\n    startPolling(1000);\n    return () => stopPolling();\n  }, [startPolling, stopPolling]);\n\n  if (loading) {\n    return null;\n  }\n\n  const { getComments } = data;\n\n  return (\n    <div className=\"comments\">\n      {map(getComments, (comment, index) => (\n        <Link\n          key={index}\n          to={`/${comment.idUser.username}`}\n          className=\"comment\"\n        >\n          <Image src={comment.idUser.avatar || ImageNoFound} avatar />\n          <div>\n            <p>{comment.idUser.username}</p>\n            <p>{comment.comment}</p>\n          </div>\n        </Link>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_COMMENT } from \"../../../../gql/comment\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./CommentForm.scss\";\n\nexport default function CommentForm({ publication }) {\n  const [addComment] = useMutation(ADD_COMMENT);\n\n  const formik = useFormik({\n    initialValues: {\n      comment: \"\"\n    },\n    validationSchema: Yup.object({\n      comment: Yup.string().required()\n    }),\n    onSubmit: async formData => {\n      try {\n        await addComment({\n          variables: {\n            input: {\n              idPublication: publication.id,\n              comment: formData.comment\n            }\n          }\n        });\n        formik.handleReset();\n      } catch (error) {}\n    }\n  });\n\n  return (\n    <Form className=\"comment-form\" onSubmit={formik.handleSubmit}>\n      <Form.Input\n        placeholder=\"Añadir comentario\"\n        name=\"comment\"\n        value={formik.values.comment}\n        onChange={formik.handleChange}\n        error={formik.errors.comment && true}\n      />\n      <Button type=\"submit\">Publicar</Button>\n    </Form>\n  );\n}\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_LIKE = gql`\n  mutation addLike($idPublication: ID!) {\n    addLike(idPublication: $idPublication)\n  }\n`;\n\nexport const DELETE_LIKE = gql`\n  mutation deleteLike($idPublication: ID!) {\n    deleteLike(idPublication: $idPublication)\n  }\n`;\n\nexport const IS_LIKE = gql`\n  query isLike($idPublication: ID!) {\n    isLike(idPublication: $idPublication)\n  }\n`;\n\nexport const COUNT_LIKES = gql`\n  query countLikes($idPublication: ID!) {\n    countLikes(idPublication: $idPublication)\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport {\n  ADD_LIKE,\n  IS_LIKE,\n  DELETE_LIKE,\n  COUNT_LIKES\n} from \"../../../../gql/like\";\nimport { Icon } from \"semantic-ui-react\";\nimport \"./Actions.scss\";\n\nexport default function Actions({ publication }) {\n  const [loadingAction, setLoadingAction] = useState(false);\n\n  const [addLike] = useMutation(ADD_LIKE);\n  const [deleteLike] = useMutation(DELETE_LIKE);\n\n  const { data, loading, refetch } = useQuery(IS_LIKE, {\n    variables: { idPublication: publication.id }\n  });\n  const {\n    data: dataCount,\n    loading: loadingCount,\n    refetch: refetchCount\n  } = useQuery(COUNT_LIKES, {\n    variables: { idPublication: publication.id }\n  });\n\n  const onAction = () => {\n    if (!loadingAction) {\n      if (isLike) {\n        onDeleteLike();\n      } else {\n        onAddLike();\n      }\n    }\n  };\n\n  const onAddLike = async () => {\n    setLoadingAction(true);\n    try {\n      await addLike({\n        variables: {\n          idPublication: publication.id\n        }\n      });\n      refetch();\n      refetchCount();\n    } catch (error) {}\n    setLoadingAction(false);\n  };\n\n  const onDeleteLike = async () => {\n    setLoadingAction(true);\n    try {\n      await deleteLike({\n        variables: {\n          idPublication: publication.id\n        }\n      });\n      refetch();\n      refetchCount();\n    } catch (error) {}\n    setLoadingAction(false);\n  };\n\n  if (loading || loadingCount) {\n    return null;\n  }\n\n  const { isLike } = data;\n  const { countLikes } = dataCount;\n  return (\n    <div className=\"actions\">\n      <Icon\n        className={isLike ? \"like active\" : \"like\"}\n        name={isLike ? \"heart\" : \"heart outline\"}\n        onClick={onAction}\n      />\n      {countLikes} {countLikes === 1 ? \"Like\" : \"Likes\"}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Modal, Grid } from \"semantic-ui-react\";\nimport Comments from \"./Comments\";\nimport CommentForm from \"./CommentForm\";\nimport Actions from \"./Actions\";\nimport \"./ModalPublication.scss\";\n\nexport default function ModalPublication({ show, setShow, publication }) {\n  const onClose = () => setShow(false);\n\n  return (\n    <Modal open={show} onClose={onClose} className=\"modal-publication\">\n      <Grid>\n        <Grid.Column\n          className=\"modal-publication__left\"\n          width={10}\n          style={{ backgroundImage: `url(\"${publication.file}\")` }}\n        />\n        <Grid.Column className=\"modal-publication__right\" width={6}>\n          <Comments publication={publication} />\n          <Actions publication={publication} />\n          <CommentForm publication={publication} />\n        </Grid.Column>\n      </Grid>\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Image } from \"semantic-ui-react\";\nimport ModalPublication from \"../../Modal/ModalPublication\";\nimport \"./PreviewPublication.scss\";\n\nexport default function PreviewPublication({ publication }) {\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <div className=\"preview-publication\" onClick={() => setShowModal(true)}>\n        <Image className=\"preview-publication__image\" src={publication.file} />\n      </div>\n      <ModalPublication\n        show={showModal}\n        setShow={setShowModal}\n        publication={publication}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport PreviewPublication from \"./PreviewPublication\";\nimport { Grid } from \"semantic-ui-react\";\nimport { map } from \"lodash\";\nimport \"./Publications.scss\";\n\nexport default function Publications({ getPublications }) {\n  return (\n    <div className=\"publications\">\n      <h1>Publicaciones</h1>\n      <Grid columns={4}>\n        {map(getPublications, (publication, index) => (\n          <Grid.Column key={index}>\n            {<PreviewPublication publication={publication} />}\n          </Grid.Column>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n","import { gql } from \"@apollo/client\";\n\nexport const PUBLISH = gql`\n  mutation publish($file: Upload) {\n    publish(file: $file) {\n      status\n      urlFile\n    }\n  }\n`;\n\nexport const GET_PUBLICATIONS = gql`\n  query getPublications($username: String!) {\n    getPublications(username: $username) {\n      id\n      idUser\n      file\n      typeFile\n    }\n  }\n`;\n\nexport const GET_PUBLICATIONS_FOLLOWEDS = gql`\n  query getPublicationsFolloweds {\n    getPublicationsFolloweds {\n      id\n      idUser {\n        name\n        username\n        avatar\n      }\n      file\n      typeFile\n      createdAt\n    }\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { Image } from \"semantic-ui-react\";\nimport { map } from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_PUBLICATIONS_FOLLOWEDS } from \"../../../gql/publication\";\nimport CommentForm from \"../../Modal/ModalPublication/CommentForm\";\nimport Actions from \"../../Modal/ModalPublication/Actions\";\nimport ModalPublication from \"../../Modal/ModalPublication\";\nimport ImageNotFound from \"../../../assets/png/avatar.png\";\nimport \"./Feed.scss\";\n\nexport default function Feed() {\n  const [showModal, setShowModal] = useState(false);\n  const [publicationSelect, setPublicationSelect] = useState(false);\n  const { data, loading, startPolling, stopPolling } = useQuery(\n    GET_PUBLICATIONS_FOLLOWEDS\n  );\n\n  useEffect(() => {\n    startPolling(2000);\n    return () => stopPolling();\n  }, [startPolling, stopPolling]);\n\n  if (loading) {\n    return null;\n  }\n\n  const openPublication = publication => {\n    setPublicationSelect(publication);\n    setShowModal(true);\n  };\n  const { getPublicationsFolloweds } = data;\n\n  return (\n    <>\n      <div className=\"feed\">\n        {map(getPublicationsFolloweds, (publication, index) => {\n          return (\n            <div key={index} className=\"feed__box\">\n              <Link to={`/${publication.idUser.username}`}>\n                <div className=\"feed__box-user\">\n                  <Image\n                    src={publication.idUser.avatar || ImageNotFound}\n                    avatar\n                  />\n                  <span>{publication.idUser.name}</span>\n                </div>\n              </Link>\n              <div\n                className=\"feed__box-photo\"\n                style={{ backgroundImage: `url(\"${publication.file}\")` }}\n                onClick={() => openPublication(publication)}\n              />\n              <div className=\"feed__box-actions\">\n                <Actions publication={publication} />\n              </div>\n              <div className=\"feed__box-form\">\n                <CommentForm publication={publication} />\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <div>\n        {showModal && (\n          <ModalPublication\n            show={showModal}\n            setShow={setShowModal}\n            publication={publicationSelect}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { map } from \"lodash\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_NOT_FOLLOWEDS } from \"../../../gql/follow\";\nimport ImageNotFound from \"../../../assets/png/avatar.png\";\nimport \"./UsersNotFolloweds.scss\";\n\nexport default function UsersNotFolloweds() {\n  const { data, loading } = useQuery(GET_NOT_FOLLOWEDS);\n\n  if (loading) {\n    return null;\n  }\n\n  const { getNotFolloweds } = data;\n\n  return (\n    <div className=\"users-not-followeds\">\n      <h3>Usuarios que no sigues</h3>\n      {map(getNotFolloweds, (user, index) => (\n        <Link\n          key={index}\n          to={`${user.username}`}\n          className=\"users-not-followeds__user\"\n        >\n          <Image src={user.avatar || ImageNotFound} avatar />\n          <span>{user.username}</span>\n        </Link>\n      ))}\n    </div>\n  );\n}\n","import React, { useState, useCallback } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { PUBLISH } from \"../.../../../../gql/publication\";\nimport { Modal, Icon, Button, Dimmer, Loader } from \"semantic-ui-react\";\nimport { toast } from \"react-toastify\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"./ModalUpload.scss\";\n\nexport default function ModalUpload({ show, setShow }) {\n  const [fileUpload, setFileUpload] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [publish] = useMutation(PUBLISH);\n\n  const onDrop = useCallback(acceptedFile => {\n    const file = acceptedFile[0];\n    setFileUpload({\n      type: \"image\",\n      file,\n      preview: URL.createObjectURL(file)\n    });\n  });\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \"image/jpeg, image/jpg, image/png\",\n    noKeyboard: true,\n    multiple: false,\n    onDrop\n  });\n\n  const onClose = () => {\n    setIsLoading(false);\n    setFileUpload(null);\n    setShow(false);\n  };\n  const onPublish = async () => {\n    try {\n      setIsLoading(true);\n      const { data } = await publish({\n        variables: {\n          file: fileUpload.file\n        }\n      });\n\n      if (!data.publish.status) {\n        toast.warning(\"error al publicar\");\n        isLoading(false);\n      } else {\n        onClose();\n      }\n    } catch (error) {}\n  };\n\n  return (\n    <Modal size=\"small\" open={show} onClose={onClose} className=\"modal-upload\">\n      <div\n        {...getRootProps()}\n        className=\"dropzone\"\n        style={fileUpload && { border: 0 }}\n      >\n        {!fileUpload && (\n          <>\n            <Icon name=\"cloud upload\" />\n            <p>Arrastra tu foto que quieras publicar</p>\n          </>\n        )}\n        <input {...getInputProps()} />\n      </div>\n      {fileUpload?.type === \"image\" && (\n        <div\n          className=\"image\"\n          style={{ backgroundImage: `url(\"${fileUpload.preview}\")` }}\n        />\n      )}\n\n      {fileUpload && (\n        <Button className=\"btn-upload btn-action\" onClick={onPublish}>\n          Publicar\n        </Button>\n      )}\n\n      {isLoading && (\n        <Dimmer active className=\"publishing\">\n          <Loader />\n          <p>Publicando...</p>\n        </Dimmer>\n      )}\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Icon, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_USER } from \"../../../gql/user\";\nimport useAuth from \"../../../hooks/useAuth\";\nimport ModalUpload from \"../../Modal/ModalUpload\";\nimport ImageNotFound from \"../../../assets/png/avatar.png\";\nimport \"./RightHeader.scss\";\n\nexport default function RightHeader() {\n  const [showModal, setShowModal] = useState(false);\n  const { auth } = useAuth();\n\n  const { data, loading, error } = useQuery(GET_USER, {\n    variables: { username: auth.username },\n  });\n\n  if (loading || error) {\n    return null;\n  }\n  const { getUser } = data;\n\n  return (\n    <>\n      <div className=\"right-header\">\n        <Link to=\"/\">\n          <Icon name=\"home\" />\n        </Link>\n        <Icon name=\"plus\" onClick={() => setShowModal(true)} />\n\n        <Link to={`/${auth.username}`}>\n          <Image src={getUser.avatar ? getUser.avatar : ImageNotFound} avatar />\n        </Link>\n      </div>\n\n      <ModalUpload show={showModal} setShow={setShowModal} />\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { SEARCH } from \"../../../gql/user\";\nimport { Search as SearchSU, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { size } from \"lodash\";\nimport avatarNotFound from \"../../../assets/png/avatar.png\";\nimport \"./Search.scss\";\n\nexport default function Search() {\n  const [search, setSearch] = useState(null);\n  const [results, setResults] = useState([]);\n\n  const { data, loading } = useQuery(SEARCH, {\n    variables: { search },\n  });\n\n  useEffect(() => {\n    if (size(data?.search) > 0) {\n      const users = [];\n      data.search.forEach((user, index) => {\n        users.push({\n          key: index,\n          title: user.name,\n          username: user.username,\n          avatar: user.avatar,\n        });\n      });\n      setResults(users);\n    } else {\n      setResults([]);\n    }\n  }, [data]);\n\n  const onChange = (e) => {\n    if (e.target.value) {\n      setSearch(e.target.value);\n    } else {\n      setSearch(null);\n    }\n  };\n\n  const handleResultSelect = () => {\n    setSearch(null);\n    setResults([]);\n  };\n\n  return (\n    <SearchSU\n      className=\"search-users\"\n      fluid\n      input={{ icon: \"search\", iconPosition: \"left\" }}\n      loading={loading}\n      value={search || \"\"}\n      onSearchChange={onChange}\n      onResultSelect={handleResultSelect}\n      results={results}\n      resultRenderer={(e) => <ResultsSearch data={e} />}\n    />\n  );\n}\n\nfunction ResultsSearch({ data }) {\n  return (\n    <Link className=\"search-users__item\" to={`/${data.username}`}>\n      <Image src={data.avatar || avatarNotFound} />\n      <div>\n        <p>{data.title}</p>\n        <p>{data.username}</p>\n      </div>\n    </Link>\n  );\n}\n","import React from \"react\";\nimport { Container, Grid, GridColumn, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport RightHeader from \"./RightHeader\";\nimport Logo from \"../../assets/png/instaclone.png\";\nimport Search from \"./Search\";\nimport \"./Header.scss\";\n\nexport default function Header() {\n  return (\n    <div className=\"header\">\n      <Container>\n        <Grid>\n          <GridColumn width={3} className=\"header__logo\">\n            <Link to=\"/\">\n              <Image src={Logo} alt=\"Instaclone\" />\n            </Link>\n          </GridColumn>\n          <GridColumn width={10}>\n            <Search />\n          </GridColumn>\n          <GridColumn width={3}>\n            <RightHeader />\n          </GridColumn>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport Header from \"../components/Header\";\n\nexport default function LayoutBasic({ children }) {\n  return (\n    <>\n      <Header />\n      <Container className=\"layout-basic\">{children}</Container>\n    </>\n  );\n}\n","import LayoutBasic from \"../layouts/LayoutBasic\";\nimport { Home, Error, User } from \"../pages\";\n\nconst routes = [\n  {\n    path: \"/\",\n    layout: LayoutBasic,\n    component: Home,\n    exact: true,\n  },\n  {\n    path: \"/:username\",\n    layout: LayoutBasic,\n    component: User,\n    exact: true,\n  },\n  {\n    layout: LayoutBasic,\n    component: Error,\n  },\n];\n\nexport default routes;\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport Feed from \"../../components/Home/Feed\";\nimport UsersNotFolloweds from \"../../components/Home/UsersNotFolloweds\";\nimport useAuth from \"../../hooks/useAuth\";\nimport \"./Home.scss\";\n\nexport default function Home() {\n  const auth = useAuth();\n  return (\n    <Grid className=\"home\">\n      <Grid.Column className=\"home__left\" width={11}>\n        <Feed />\n      </Grid.Column>\n      <Grid.Column className=\"home__right\" width={5}>\n        <UsersNotFolloweds />\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Profile from \"../components/User/Profile\";\nimport Publications from \"../components/Publications\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_PUBLICATIONS } from \"../gql/publication\";\nimport { size } from \"lodash\";\n\nexport default function User() {\n  const { username } = useParams();\n  const { data, loading, startPolling, stopPolling } = useQuery(\n    GET_PUBLICATIONS,\n    {\n      variables: {\n        username,\n      },\n    }\n  );\n\n  useEffect(() => {\n    startPolling(1000);\n    return () => {\n      stopPolling();\n    };\n  }, [startPolling, stopPolling]);\n\n  if (loading) {\n    return null;\n  }\n  const { getPublications } = data;\n\n  return (\n    <>\n      <Profile username={username} totalPublications={size(getPublications)} />\n      <Publications getPublications={getPublications} />\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./Error404.scss\";\n\nexport default function Error404() {\n  return (\n    <div>\n      <h1>Error 404...</h1>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport { map } from \"lodash\";\n\nexport default function Navigation() {\n  return (\n    <Router>\n      <Switch>\n        {map(routes, (route, index) => (\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            render={(props) => (\n              <route.layout>\n                <route.component {...props} />\n              </route.layout>\n            )}\n          />\n        ))}\n      </Switch>\n    </Router>\n  );\n}\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { ToastContainer } from \"react-toastify\";\nimport client from \"./config/apollo\";\nimport { Auth } from \"./pages\";\nimport { getToken, decodeToken, removeToken } from \"./utils/token\";\nimport AuthContext from \"./context/AuthContext\";\nimport Navigation from \"./routes/Navigation\";\n\nfunction App() {\n  const [auth, setAuth] = useState(undefined);\n\n  useEffect(() => {\n    const token = getToken();\n    if (!token) {\n      setAuth(null);\n    } else {\n      setAuth(decodeToken(token));\n    }\n  }, []);\n\n  const logout = () => {\n    removeToken();\n    setAuth(null);\n  };\n\n  const setUser = (user) => {\n    setAuth(user);\n  };\n\n  const authData = useMemo(\n    () => ({\n      auth,\n      logout,\n      setUser,\n    }),\n    [auth]\n  );\n\n  if (auth === undefined) return null;\n\n  return (\n    <ApolloProvider client={client}>\n      <AuthContext.Provider value={authData}>\n        {!auth ? <Auth /> : <Navigation />}\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar\n          newestOnTop\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </AuthContext.Provider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}